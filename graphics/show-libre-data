#!/bin/bash

cd `dirname $0`

# catch "Illegal time format" (MacOSX)
DATE=date
if ! $DATE -d@1 >/dev/null 2>/dev/null
then
    DATE=gdate
    if ! $DATE -d@1 >/dev/null 2>/dev/null
    then
	echo no working \"date\" command found
	exit 99
    else
	echo using \"gdate\" instead of \"date\"
    fi
fi

# last sensor change, plus 14 days (runtime), minus 30 minutes (half startup)
schange=$(($(cat ../data/last-sensor.time) / 1000))
#if [ $schange -gt `$DATE +%s` ]
#then
#    schange=$(($schange - 14*86400 ))
#fi
tag1=${1:-`TZ=UTC $DATE +"%Y-%m-%dT%H:%M:00Z" -d@$schange`}
tag2=${2:-`TZ=UTC $DATE +"%Y-%m-%dT%H:%M:00Z" -d"now"`}
sensor=${3:-"Last Libre2 sensor"}
set +e

# vertical line to mark sensor change
cat > sensor.in <<EOF
`TZ=UTC $DATE +"%Y-%m-%dT%H:%M:%SZ" -d@$(($schange + 1800))` 0
`TZ=UTC $DATE +"%Y-%m-%dT%H:%M:%SZ" -d@$(($schange + 1800))` 500
EOF

(
cat <<EOF
set term png size 1500,600
set output "libre-data.png"
set title "${sensor}"
unset multiplot
set style data lines
set timefmt "%Y-%m-%dT%H:%M:%SZ"
set format x "%m/%d\n%H:%M"
set xdata time
set xlabel "Date/Time (UTC)"
set xrange ["${tag1}":"${tag2}"]
set ylabel "Sensor Glucose mg/dl"
set yrange [0:400]
plot #
EOF
[ -s ../data/sg-curr.dump ] && cat <<EOF
    "../data/sg-curr.dump" using 1:3 w p  lc rgb "orange" t "current (1-min)", #
EOF
[ -s ../data/sg-hist.dump ] && cat <<EOF
    "../data/sg-hist.dump" using 1:3 w lp lc rgb "green"  t "historic (15-min)", #
EOF
[ -s ../data/sg-real.dump ] && cat <<EOF
    "../data/sg-real.dump" using 1:3 w p  lc rgb "blue"   t "realtime (scan)", #
EOF
[ -s bg-ns.dump   ] && cat <<EOF
    "bg-ns.dump"           using 1:3 w p  lc rgb "red"    t "BG meter (finger)", #
EOF
cat <<EOF
    "sensor.in"            using 1:2 w l  lc rgb "gray"   t "sensor change"
EOF
) \
| tr '#' '\\' \
| sed 's~,\s*$~~' \
| tee libre-data.in \
| gnuplot
feh libre-data.png

exit
